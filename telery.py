import wikipediaapi
from pyrogram import Client, filters
import random
import asyncio
import requests
import io
import os
from pyrogram.errors import FloodWait
import datetime
import tgcrypto
import time

def create_file(filename, content):
    if not os.path.exists(filename):
        with open(filename, 'w') as file:
            file.write(content)

create_file('ab.info', '')
create_file('blbd.info', '')
create_file('prefix.info', '.')

with open("info.openme", "r") as file:
    lines = file.readlines()
    api_id = int(lines[0].strip())
    api_hash = lines[1].strip()
    userid_telegram = int(lines[2].strip())

with open("prefix.info", "r") as file:
    lines = file.readlines()
    if len(lines) > 0:
        if isinstance(lines[0], str):
            try:
                prefix_userbot = lines[0].strip()
            except ValueError:
                print("–û—à–∏–±–∫–∞: –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ñ–∞–π–ª–∞ 'prefix.info' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º–æ–π —Å—Ç—Ä–æ–∫–æ–π.")
        else:
            print("–û—à–∏–±–∫–∞: –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ñ–∞–π–ª–∞ 'prefix.info' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π.")
    else:
        print("–û—à–∏–±–∫–∞: —Ñ–∞–π–ª 'prefix.info' –ø—É—Å—Ç.")

app = Client("my_account", api_id=api_id, api_hash=api_hash)
wiki_wiki = wikipediaapi.Wikipedia(
    language='ru',
    extract_format=wikipediaapi.ExtractFormat.WIKI,
    user_agent='TeleryUserBot/1.0'
)

blacklist = []
open("bldb.info", "a").close()

with open("bldb.info", "r") as file:
    for line in file:
        if line.strip() == "":
            continue
        user_id = int(line.strip())
        blacklist.append(user_id)

response = requests.get("https://raw.githubusercontent.com/Blaing7542/Assis-userbot/main/bull_db")
if response.status_code == 200:
    bull_variants = [line.strip() for line in io.StringIO(response.text)]
else:
    bull_variants = ["–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö __.bull__"]

response = requests.get("https://raw.githubusercontent.com/Blaing7542/Assis-userbot/main/bull_db")
if response.status_code == 200:
    ab_variants = [line.strip() for line in io.StringIO(response.text)]
else:
    ab_variants = ["–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö __.bull__"]

@app.on_message(filters.command(["help"], prefixes=prefix_userbot))
async def help_command(_, message):
    await message.edit_text(
        "**–ö–æ–º–∞–Ω–¥—ã(–≤—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥: 21):**\n–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —é–±:\nüò°`bull` - –±—É–ª–ª–∏–Ω–≥\n`doubletext` - —É–¥–≤–∞–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç. –ø—Ä–∏–º–µ—Ä: *–ø–ø—Ä—Ä–∏–∏–≤–≤–µ–µ—Ç—Ç!*\n‚¨õ`addbl` - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –û–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤–∞—à–µ–≥–æ —é–±.\n‚¨õ`delbl` - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.\n`animtext` - –∞–Ω–∏–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç.\nüòà`ab` - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—É–ª–ª–∏–Ω–≥\nüëø`delab` - —É–±—Ä–∞—Ç—å –∏–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—É–ª–ª–∞.\n‚åõ`ping` - –ü–∏—à–µ—Ç –ø–∏–Ω–≥ —é–±.\n‚úâ`spam` - –ù–∞—á–∏–Ω–∞–µ—Ç —Ñ–ª—É–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –≤—ã–±—Ä–∞–ª–∏. –ü—Ä–∏–º–µ—Ä: `spam 3 Telery - –∫—Ä—É—Ç–æ!`\nüîé`search` - –ò—â–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.\nü•∞`cuword` - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–∏–ª–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n‚Ñπ`checksite` - –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–∞–π—Ç, –∏ –±–µ—Ä—ë—Ç –æ—Ç—Ç—É–¥–∞ —Å–∏–º–≤–æ–ª—ã. –ü—Ä–∏–º–µ—Ä:\n`checksite https://google.com`\nüí§`off` - –û—Ç–∫–ª—é—á–∞–µ—Ç —é–∑–µ—Ä–±–æ—Ç–∞.\n`.prefix` - –ò–∑–º–µ–Ω—è–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å —é–∑–µ—Ä–±–æ—Ç–∞. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å: `.`\n**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö:**\n‚åõ`time` - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —é–±.\n`oorr` - –û—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞.\nüê±`randkomaru` - –∫–∏–¥–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –≥–∏—Ñ–∫—É —Å –ö–æ–º–∞—Ä—É\n‚ùì`who` - –≤—ã–±–∏—Ä–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–µ–ª–∞, –∏ –ø–∏—à–µ—Ç –∫—Ç–æ –æ–Ω.\nüé∞`caz` - –¥–µ–ª–∞–µ—Ç —Å—Ç–∞–≤–∫—É –Ω–∞ —á—Ç–æ-—É–≥–æ–¥–Ω–æ. –ø—Ä–∏–º–µ—Ä: *caz 2 –¥–æ–ª–ª–∞—Ä–∞*\nüßÆ`math` - —Ä–µ—à–∞–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏\n‚Ñπ`info` - –∏–Ω—Ñ–æ –æ —é–±")

@app.on_message(filters.command("bull", prefixes=prefix_userbot))
async def bull_command(_, message):
    if message.from_user.id in blacklist:
        await message.reply_text("‚ùå–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
        return

    await message.edit_text(random.choice(bull_variants))

@app.on_message(filters.command(["info"], prefixes=prefix_userbot))
async def info_command(_, message):
    user_id = message.from_user.id
    with open("bldb.txt", "r") as file:
        allowed_ids = file.read().splitlines()
    if str(user_id) in allowed_ids:
        await message.reply_text("‚ùå–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
    else:
        start_time = time.time()
        await message.delete()
        end_time = time.time()
        ping_time = round((end_time - start_time) * 1000, 1)
        await app.send_photo(
            chat_id=message.chat.id,
            photo="https://user-images.githubusercontent.com/149149385/278584536-1dab252e-9fd4-4a0c-a80e-5e16c1220eaa.jpg",
            caption=f"**‚ú®Telery**\n__üîßVersion: 1.6.1__\nSource: https://t.me/telery_userbot\n**Version for user‚ù§**\n**Ping: {ping_time}ms**"
        )


@app.on_message(filters.command(["doubletext"], prefixes=prefix_userbot))
async def animtext_command(_, message):
    user_id = message.from_user.id
    with open("bldb.txt", "r") as file:
        if str(user_id) in file.read():
            await message.reply("‚ùå–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
            return

    text = message.text.split(".doubletext ", 1)[1]
    animated_text = ""
    for char in text:
        animated_text += char + char
    await message.edit_text(animated_text)

@app.on_message(filters.command(["caz"], prefixes=prefix_userbot))
async def caz_command(_, message):
    await asyncio.sleep(4)
    bet_split = message.text.split(f"{prefix_userbot}caz ", 1)
    if len(bet_split) < 2:
        await message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞!")
        return

    bet = bet_split[1]
    try:
        bet_amount, bet_text = bet.split(maxsplit=1)
        bet_amount = int(bet_amount)
        if bet_amount <= 0:
            await message.reply_text("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!")
            return
    except (ValueError, IndexError):
        await message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞!")
        return

    result = random.choice([0, 1])
    if result == 0:
        loss_amount = bet_amount
        await message.reply_text(f"üò¢–ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {loss_amount} {bet_text}")
    else:
        win_amount = bet_amount * 2
        await message.reply_text(f"ü•≥–í—ã–∏–≥—Ä—ã—à! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount} {bet_text}")

@app.on_message(filters.command(["addbl"], prefixes=prefix_userbot))
async def add_blacklist_command(_, message):
    if message.from_user.id == userid_telegram:
        user_id = message.reply_to_message.from_user.id
        if user_id not in blacklist:
            blacklist.append(user_id)
            with open("blbd.info", "a") as file:
                file.write(str(user_id) + "\n")
            await message.reply_text("‚ùå–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤–∞—à–µ–≥–æ —é–±.")
        else:
            await message.reply_text("‚ùå–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
    else:
        await message.reply_text("‚ùå–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

@app.on_message(filters.command(["delbl"], prefixes=prefix_userbot))
async def remove_blacklist_command(_, message):
    if message.from_user.id == userid_telegram:
        user_id = message.reply_to_message.from_user.id
        if user_id in blacklist:
            blacklist.remove(user_id)
            with open("blbd.info", "w") as file:
                for id in blacklist:
                    file.write(str(id) + "\n")
            await message.reply_text("‚úÖ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.")
        else:
            await message.reply_text("‚õî–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
    else:
        await message.reply_text("‚õî–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

@app.on_message(filters.command(["animtext"], prefixes=prefix_userbot) & filters.me)
async def animtext_command(_, message):
    input_text = message.text.split(".animtext ", maxsplit=1)[1]
    temp_text = input_text
    edited_text = ""
    typing_symbol = "‚ñà"

    while edited_text != input_text:
        try:
            await message.edit(edited_text + typing_symbol)
            time.sleep(0.1)
            edited_text = edited_text + temp_text[0]
            temp_text = temp_text[1:]
            await message.edit(edited_text)
            time.sleep(0.1)
        except FloodWait:
            print("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É. –ü–æ–¥–æ–∂–¥–∏—Ç–µ...")

@app.on_message(filters.command(["ab"], prefixes=prefix_userbot))
def autobull_command(client, message):
    if message.from_user.id != userid_telegram:
        message.reply_text("–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    replied_user_id = message.reply_to_message.from_user.id

    with open("ab.info", "a") as file:
        file.write(str(replied_user_id) + "\n")

    random_variant = random.choice(ab_variants)
    message.reply_text("**üòà–ê–≤—Ç–æ–±—É–ª–ª –≤–∫–ª—é—á–µ–Ω.**")

@app.on_message(filters.command(["delab"], prefixes=prefix_userbot))
def delab_command(client, message):
    if message.from_user.id != userid_telegram:
        message.reply_text("–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    user_id_to_remove = message.reply_to_message.from_user.id

    with open("ab.info", "r") as file:
        user_ids = file.read().splitlines()

    user_ids = [user_id for user_id in user_ids if user_id != str(user_id_to_remove)]

    with open("ab.info", "w") as file:
        file.write("\n".join(user_ids))

    message.reply_text("**üëø–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–±—É–ª–ª.**")

@app.on_message(filters.command(["who"], prefixes=prefix_userbot))
def who_command(client, message):
    args = message.text.split()[1:]
    if args:
        members_count = client.get_chat_members_count(message.chat.id)
        members = client.get_chat_members(message.chat.id, limit=members_count)
        random_user = random.choice(list(members)).user
        response = f"@{random_user.username} {' '.join(args)}"
    else:
        response = "‚ùå–ù–µ–≤–µ—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ. –ü—Ä–∏–º–µ—Ä:\n`.who –º–∏–ª—ã–π`"
    with open("bldb.txt", "r") as file:
        banned_users = file.read().splitlines()
    if str(message.from_user.id) in banned_users:
        response = "‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."
    app.send_message(message.chat.id, response)


@app.on_message(filters.command(["randkomaru"], prefixes=prefix_userbot))
async def send_random_komaru_gif(_, message):
    user_id = message.from_user.id
    with open('blbd.info', 'r') as file:
        if str(user_id) in file.read():
            await message.reply('–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.')
            return

    url = 'https://raw.githubusercontent.com/Blaing-7542/BD_Telery/main/komarugifbd'
    response = requests.get(url)
    if response.status_code == 200:
        gifs = response.text.split('\n')
        random_gif = random.choice(gifs)
        await message.reply_animation(random_gif)
    else:
        await message.reply('üò¢–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–∏—Ñ–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')

@app.on_message(filters.command(["oorr"], prefixes=prefix_userbot))
def oorr_command(_, message):
    user_id = message.from_user.id
    with open("blbd.info", "r") as file:
        banned_users = file.read().splitlines()

    if str(user_id) in banned_users:
        message.reply_text("‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    random_number = random.randint(0, 1)
    if random_number == 0:
        coin_emoji = "üåë"
        result = "ü¶Ö–í—ã–ø–∞–ª –æ—Ä—ë–ª!"
    else:
        coin_emoji = "üåë"
        result = "ü™ô–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞!"

    message.reply_text(coin_emoji)
    time.sleep(2)
    message.reply_text(result)

@app.on_message(filters.command(["ping"], prefixes=prefix_userbot))
def ping(_, message):
    with open("blbd.info", "r") as file:
        user_ids = file.read().splitlines()
        if str(message.from_user.id) in user_ids:
            message.reply("‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        else:
            start_time = time.time()
            msg = message.edit("üåï")
            end_time = time.time()
            ping_time = round((end_time - start_time) * 1000)
            msg.edit("**üïõ–í–∞—à –ø–∏–Ω–≥: {} –º—Å**".format(ping_time))

@app.on_message(filters.command(["time"], prefixes=prefix_userbot))
def send_time(_, message):
    user_id = message.from_user.id
    with open("blbd.info", "r") as file:
        banned_users = [int(line.strip()) for line in file]
    if user_id in banned_users:
        message.reply_text("‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
    else:
        current_time = datetime.datetime.now().strftime("%H:%M:%S")
        message.reply_text(f"‚åõ–í—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {current_time}")

@app.on_message(filters.command(["math"], prefixes=prefix_userbot))
def calculate_math(_, message):
    user_id = str(message.from_user.id)
    if user_id in open("blbd.info").read():
        message.reply("‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
    else:
        command = message.text.split(" ", 1)[1]
        if command.startswith(("a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "–∞", "–±", "–≤", "–≥", "–¥", "–µ", "—ë", "–∂", "–∑", "–∏", "–π", "–∫", "–ª", "–º", "–Ω", "–æ", "–ø", "—Ä", "—Å", "—Ç", "—É", "—Ñ", "—Ö", "—Ü", "—á", "—à", "—â", "—ä", "—ã", "—å", "—ç", "—é", "—è", "!", "@", "#", "$", "%", "^", "&", "*", "(", ")", "-", "_", "+", "=", "{", "}", "[", "]", ":", ";", "'", "<", ">", ",", ".", "?", "/")):
            message.reply("‚õî–¢–∞–∫–∏–µ —Å–ª–æ–≤–∞ –ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ!")
        else:
            try:
                result = eval(command)
                message.reply(f"{command} = {result}")
            except Exception as e:
                message.reply(f"‚õî–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")


@app.on_message(filters.command(["search"], prefixes=prefix_userbot))
def search_command(_, message):
    user_id = message.from_user.id
    with open("blbd.info", "r") as file:
        if str(user_id) in file.read():
            message.edit_text("‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        else:
            query = message.text.split(' ', 1)[1]
            page_py = wiki_wiki.page(query)
            if page_py.exists():
                response = "**üß†–ù–∞—à—ë–ª –æ—Ç–≤–µ—Ç:**\n\n" + page_py.text[:1024]
                message.edit_text(response)
            else:
                message.edit_text("‚ùå–°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏–∏.")

@app.on_message(filters.text & filters.private)
def auto_bull(_, message):
    user_id = message.from_user.id
    with open("ab.info", "r") as file:
        user_ids = file.read().splitlines()

    if str(user_id) in user_ids:
        response = requests.get("https://raw.githubusercontent.com/Blaing7542/Assis-userbot/main/bull_db")
        if response.status_code == 200:
            sentences = response.text.splitlines()
            random_sentence = random.choice(sentences)
            message.reply(random_sentence)

@ app.on_message(filters.command(["cuword"], prefixes=prefix_userbot))
def change_message(_, message):
    response = requests.get("https://raw.githubusercontent.com/Blaing-7542/BD_Telery/main/cute-words-bd")
    cute_words = response.text.splitlines()
    random_cute_word = random.choice(cute_words)
    message.edit(random_cute_word)

with open("info.openme", "r") as file:
    lines = file.readlines()
    if len(lines) >= 3:
        allowed_user_id = lines[2].strip()

@app.on_message(filters.command(["spam"], prefixes=prefix_userbot))
def spam_message(_, message):
    user_id = str(message.from_user.id)
    if user_id != allowed_user_id:
        app.send_message(message.chat.id, "‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —Ç.–∫ –æ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è.")
        return
    _, count, *words = message.text.split()
    count = int(count)
    text = ' '.join(words)
    message.delete()
    for _ in range(count):
        app.send_message(message.chat.id, text)


@app.on_message(filters.command(["checksite"], prefixes=prefix_userbot))
def check_site(_, message):
    if message.from_user.id in blacklist:
        message.reply("‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —Ç.–∫ –≤—ã –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
        return

    site_url = message.text.split()[1]
    try:
        response = requests.get(site_url)
        response.raise_for_status()
        content = response.text[:500]
        message.edit(content)

    except requests.exceptions.HTTPError as errh:
        print("HTTP Error:", errh)
    except requests.exceptions.ConnectionError as errc:
        print("Error Connecting:", errc)
    except requests.exceptions.Timeout as errt:
        print("Timeout Error:", errt)
    except requests.exceptions.RequestException as err:
        print("Something went wrong:", err)


@app.on_message(filters.command(["off"], prefixes=prefix_userbot))
def turn_off(_, message):
    if message.from_user.id != userid_telegram:
        message.reply("‚õî–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —Ç.–∫ –æ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è.")
        return
    message.edit("**üí§–û—Ç–∫–ª—é—á–∞—é —é–∑–µ—Ä–±–æ—Ç–∞...**")
    exit()

@app.on_message(filters.command(["prefix"], prefixes="."))
def change_prefix(client, message):
    user_id = message.from_user.id
    if user_id in open("blbd.info").read().splitlines():
        client.send_message(message.chat.id, "–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    with open("info.openme", "r") as file:
        lines = file.readlines()
        if len(lines) >= 3:
            if str(user_id) == lines[2].strip():
                if len(message.command) == 1:
                    with open("prefix.info", "r") as prefix_file:
                        prefix_userbot = prefix_file.readline().strip()
                        client.send_message(message.chat.id, f"–¢–µ–∫—É—â–∏–π –ø—Ä–µ—Ñ–∏–∫—Å: {prefix_userbot}")
                else:
                    new_prefix = message.command[1]
                    with open("prefix.info", "w") as prefix_file:
                        prefix_file.write(new_prefix)
                    message.edit("‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω—ë–Ω! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —é–∑–µ—Ä–±–æ—Ç–∞, —á—Ç–æ–±—ã –ø—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω–∏–ª—Å—è.")
            else:
                client.send_message(message.chat.id, "–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        else:
            client.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª 'info.openme'.")

print("–Æ–∑–µ—Ä–±–æ—Ç Telery –∑–∞–ø—É—â–µ–Ω!\n–í–µ—Ä—Å–∏—è: 1.6.1\n–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏—Ç–µ —Å—é–¥–∞:\nhttps://t.me/telery_supportbot")
app.run()
